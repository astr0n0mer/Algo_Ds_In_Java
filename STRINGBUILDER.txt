1.Check for a string palindrome:

CODE:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);
        String A=sc.next();
        StringBuilder B = new StringBuilder();
        B.append(A);
        StringBuilder C = new StringBuilder();
        C.append(A);
        C.reverse(); 
        if(B.toString().equals(C.toString()))
        System.out.println("Yes");
        else
        System.out.println("No");
        
    }
}
2.Backspace string compare:

CODE:
import java.util.*;
public class Test{
 public static String backspace(String s)
 {
    char a[]=s.toCharArray();
    StringBuilder ans= new StringBuilder();
    int i,j=-1;
    for(i=0;i<a.length;i++)
    {
		if(a[i]!='#')
		{
			ans.append(a[i]);
			j++;
	    }
	    else
	    {
			if(ans.length()>0)
			{
				ans.deleteCharAt(j);
				j--;
			}
		}  
	}
    return ans.toString(); 
 }
 public static void main(String []args){
   
   String s ="a##c",t="#a#c";
   String t1= backspace(s);
   String t2= backspace(t);
   System.out.println(t1+" "+t2);	 
   if(t2.equals(t1)) System.out.println("true"); // backspace(s).equals(backspace(t))
   else System.out.println("false");
 }	
}

3.Check for a number palindrome:

CODE:
public class NumberPalindrome {
    public static boolean isPalindrome(int number){
        String s = Integer.toString(Math.abs(number));
        StringBuilder s1 = new StringBuilder(s);
        String s2 = s1.reverse().toString();
        int val = Integer.parseInt(s2);
        if(Math.abs(number)==val)
        return true;
        return false;
     }
}

4.Use of delete() in StringBuilder class(hackerrank-->Simple Text Editor):

CODE:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n,op,c,d;
        String t = "";
        StringBuilder s =new StringBuilder("");
        Stack<String> st = new Stack();
        st.push(s.toString());
        n = in.nextInt();
        while(n-->0){
        op = in.nextInt();
        if(op==1){
         t = in.next();   
         s.append(t);
         st.push(s.toString());
        }
        if(op==2){
         d = in.nextInt();
         s.delete(s.length()-d,s.length());
         st.push(s.toString());
        }
        if(op==3){
         c = in.nextInt();
         System.out.println(s.charAt(--c));   
         }
        if(op==4){
         st.pop();
         s.replace(0,s.length(),st.peek());
        }
        }
    }
}

