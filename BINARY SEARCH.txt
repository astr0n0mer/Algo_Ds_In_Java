#Complexity should be strictly O(logn)
1.Minimum in a rotated sorted array:(leetcode-->Medium)
CODE:
class Solution {
    public int findMin(int[] nums) {
        int b=0,e=nums.length-1,mid;
        while(b<e)
        {
            mid=b+(e-b)/2;
            if(nums[mid]>nums[e])
            b=mid+1;
            else
            e=mid;    
        }
     return nums[b];    
    }
}

2.Minimum in a rotated sorted array-2:(leetcode-->Hard)
This code works for both 1 and 2 duplicates and non-duplicates
CODE:
class Solution {
    public int findMin(int[] nums) {
        int b=0,e=nums.length-1,mid;
        while(b<e)
        {
            mid=b+(e-b)/2;
            if(nums[mid]>nums[e])
            b=mid+1;
            else if(nums[mid]<nums[e]) 
            e=mid;
            else
            e--;
        }
     return nums[b];    
    }
}
        
 